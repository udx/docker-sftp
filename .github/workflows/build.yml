name: Test Build

on:
  push:
    branches-ignore:
      - master

env:
  # GCP and Artifact Registry configuration
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  AR_LOCATION: ${{ vars.AR_LOCATION }}
  AR_REPOSITORY: ${{ vars.AR_REPOSITORY }}
  IMAGE_NAME: ${{vars.AR_LOCATION}}-docker.pkg.dev/${{secrets.GKE_PROJECT}}/${{vars.AR_REPOSITORY}}

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Get version from package.json
      - name: Get Tag from package.json
        id: version
        run: echo "TAG=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      # Configure Docker for Artifact Registry
      - name: Configure Docker authentication for Artifact Registry
        run: |-
          gcloud --quiet auth configure-docker $AR_LOCATION-docker.pkg.dev

      # Set lowercase branch name
      - name: Set lowercase branch name
        run: echo "BRANCH_NAME=$(echo "${{ github.ref_name }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "${{env.IMAGE_NAME}}/${{ env.BRANCH_NAME }}:${{ steps.version.outputs.TAG }}" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .

      # Scan Docker image for vulnerabilities
      - name: Scan for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{env.IMAGE_NAME}}/${{ env.BRANCH_NAME }}:${{ steps.version.outputs.TAG }}"
          exit-code: "1"
          severity: "CRITICAL"
          timeout: "10m0s"
          format: "table"
          scan-type: "image"
          scanners: "vuln"
